{"ast":null,"code":"import{connect}from'react-redux';import*as Actions from'../actions';import App from'../App';import*as AsyncFuncs from'../customMiddleware';var mapStateToProps=function mapStateToProps(state){return{whosOnFirst:state.whosOnFirst,time:state.time,teamMembers:state.teamMembers,circle:state.circle,teamMemberLocations:state.teamMemberLocations,isSaved:state.isSaved};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{changeTMList:function changeTMList(){return dispatch(AsyncFuncs.FetchTMs());},updateTimer:function updateTimer(newTime){return dispatch(AsyncFuncs.UpdateTime(newTime));},updateTM:function updateTM(){return dispatch(Actions.changeTeamMember);},changeCircle:function changeCircle(c){return dispatch(AsyncFuncs.UpdateCircle(c));},initializeLocation:function initializeLocation(c){return dispatch(Actions.initializeLocationArray(c));},updateLocation:function updateLocation(c){return dispatch(Actions.updateLocationArray(c));},calculateWinner:function calculateWinner(c){return dispatch(Actions.calculateWinner(c));},resetStandup:function resetStandup(c){return dispatch(Actions.resetStandup(c));},saveStandup:function saveStandup(c){return dispatch(AsyncFuncs.UpdateStandup(c));}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/joriecheshire/Documents/ghwheelofmisfortune/client/src/actions/actionMapping.js"],"names":["connect","Actions","App","AsyncFuncs","mapStateToProps","state","whosOnFirst","time","teamMembers","circle","teamMemberLocations","isSaved","mapDispatchToProps","dispatch","changeTMList","FetchTMs","updateTimer","newTime","UpdateTime","updateTM","changeTeamMember","changeCircle","c","UpdateCircle","initializeLocation","initializeLocationArray","updateLocation","updateLocationArray","calculateWinner","resetStandup","saveStandup","UpdateStandup"],"mappings":"AAAA,OAAQA,OAAR,KAAsB,aAAtB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,qBAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,WAAW,CAAED,KAAK,CAACC,WADW,CAE9BC,IAAI,CAAGF,KAAK,CAACE,IAFiB,CAG9BC,WAAW,CAAEH,KAAK,CAACG,WAHW,CAI9BC,MAAM,CAAEJ,KAAK,CAACI,MAJgB,CAK9BC,mBAAmB,CAAEL,KAAK,CAACK,mBALG,CAM9BC,OAAO,CAAEN,KAAK,CAACM,OANe,CAAL,EAA7B,CAQE,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCC,YAAY,CAAE,8BAAMD,CAAAA,QAAQ,CAACV,UAAU,CAACY,QAAX,EAAD,CAAd,EAD0B,CAExCC,WAAW,CAAE,qBAACC,OAAD,QAAaJ,CAAAA,QAAQ,CAACV,UAAU,CAACe,UAAX,CAAsBD,OAAtB,CAAD,CAArB,EAF2B,CAGxCE,QAAQ,CAAE,0BAAMN,CAAAA,QAAQ,CAACZ,OAAO,CAACmB,gBAAT,CAAd,EAH8B,CAIxCC,YAAY,CAAE,sBAACC,CAAD,QAAOT,CAAAA,QAAQ,CAACV,UAAU,CAACoB,YAAX,CAAwBD,CAAxB,CAAD,CAAf,EAJ0B,CAKxCE,kBAAkB,CAAE,4BAACF,CAAD,QAAOT,CAAAA,QAAQ,CAACZ,OAAO,CAACwB,uBAAR,CAAgCH,CAAhC,CAAD,CAAf,EALoB,CAMxCI,cAAc,CAAE,wBAACJ,CAAD,QAAOT,CAAAA,QAAQ,CAACZ,OAAO,CAAC0B,mBAAR,CAA4BL,CAA5B,CAAD,CAAf,EANwB,CAOxCM,eAAe,CAAE,yBAACN,CAAD,QAAOT,CAAAA,QAAQ,CAACZ,OAAO,CAAC2B,eAAR,CAAwBN,CAAxB,CAAD,CAAf,EAPuB,CAQxCO,YAAY,CAAE,sBAACP,CAAD,QAAOT,CAAAA,QAAQ,CAACZ,OAAO,CAAC4B,YAAR,CAAqBP,CAArB,CAAD,CAAf,EAR0B,CASxCQ,WAAW,CAAE,qBAACR,CAAD,QAAOT,CAAAA,QAAQ,CAACV,UAAU,CAAC4B,aAAX,CAAyBT,CAAzB,CAAD,CAAf,EAT2B,CAAf,EAA3B,CAcA,cAAetB,CAAAA,OAAO,CACpBI,eADoB,CAEpBQ,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import {connect} from 'react-redux';\nimport * as Actions from '../actions';\nimport App from '../App';\nimport * as AsyncFuncs from '../customMiddleware'\n\nconst mapStateToProps = state => ({\n    whosOnFirst: state.whosOnFirst,\n    time : state.time,\n    teamMembers: state.teamMembers,\n    circle: state.circle,\n    teamMemberLocations: state.teamMemberLocations,\n    isSaved: state.isSaved\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    changeTMList: () => dispatch(AsyncFuncs.FetchTMs()),\n    updateTimer: (newTime) => dispatch(AsyncFuncs.UpdateTime(newTime)),\n    updateTM: () => dispatch(Actions.changeTeamMember),\n    changeCircle: (c) => dispatch(AsyncFuncs.UpdateCircle(c)),\n    initializeLocation: (c) => dispatch(Actions.initializeLocationArray(c)),\n    updateLocation: (c) => dispatch(Actions.updateLocationArray(c)),\n    calculateWinner: (c) => dispatch(Actions.calculateWinner(c)),\n    resetStandup: (c) => dispatch(Actions.resetStandup(c)),\n    saveStandup: (c) => dispatch(AsyncFuncs.UpdateStandup(c))\n\n\n  });\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(App);"]},"metadata":{},"sourceType":"module"}