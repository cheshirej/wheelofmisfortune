{"ast":null,"code":"export function IsTheWinner(t,ll,ul){var u=range(ll,ul,1);if(u.length===0){return true;}else{return false;}};export function CalculateAngleChange(t,a){return(a+9*t/25)%360;};export function range(start,end,step){var range=[];var typeofStart=typeof start;var typeofEnd=typeof end;if(step===0){throw TypeError(\"Step cannot be zero.\");}if(typeofStart===\"undefined\"||typeofEnd===\"undefined\"){throw TypeError(\"Must pass start and end arguments.\");}else if(typeofStart!==typeofEnd){throw TypeError(\"Start and end arguments must be of same type.\");}typeof step==\"undefined\"&&(step=1);if(typeofStart===\"number\"){while(step>0?end>=start:end<=start){range.push(start);start+=step;}}else if(typeofStart===\"string\"){if(start.length!==1||end.length!==1){throw TypeError(\"Only strings with one character are supported.\");}start=start.charCodeAt(0);end=end.charCodeAt(0);while(step>0?end>=start:end<=start){range.push(String.fromCharCode(start));start+=step;}}else{throw TypeError(\"Only string and number types are supported\");}return range;}","map":{"version":3,"sources":["/Users/joriecheshire/Documents/ghwheelofmisfortune/client/src/modules/CalculationManager.js"],"names":["IsTheWinner","t","ll","ul","u","range","length","CalculateAngleChange","a","start","end","step","typeofStart","typeofEnd","TypeError","push","charCodeAt","String","fromCharCode"],"mappings":"AACI,MAAO,SAASA,CAAAA,WAAT,CAAqBC,CAArB,CAAwBC,EAAxB,CAA4BC,EAA5B,CAA+B,CAClC,GAAIC,CAAAA,CAAC,CAAGC,KAAK,CAACH,EAAD,CAAKC,EAAL,CAAS,CAAT,CAAb,CACA,GAAIC,CAAC,CAACE,MAAF,GAAa,CAAjB,CACA,CACI,MAAO,KAAP,CACH,CAHD,IAKA,CACI,MAAO,MAAP,CACH,CACD,EAEJ,MAAO,SAASC,CAAAA,oBAAT,CAA8BN,CAA9B,CAAgCO,CAAhC,CACJ,CACI,MAAO,CAACA,CAAC,CAAK,EAAEP,CAAH,CAAM,EAAZ,EAAmB,GAA1B,CACH,EAEN,MAAO,SAASI,CAAAA,KAAT,CAAeI,KAAf,CAAsBC,GAAtB,CAA2BC,IAA3B,CAAiC,CAClC,GAAIN,CAAAA,KAAK,CAAG,EAAZ,CACA,GAAIO,CAAAA,WAAW,CAAG,MAAOH,CAAAA,KAAzB,CACA,GAAII,CAAAA,SAAS,CAAG,MAAOH,CAAAA,GAAvB,CAEA,GAAIC,IAAI,GAAK,CAAb,CAAgB,CACZ,KAAMG,CAAAA,SAAS,CAAC,sBAAD,CAAf,CACH,CAED,GAAIF,WAAW,GAAK,WAAhB,EAA+BC,SAAS,GAAK,WAAjD,CAA8D,CAC1D,KAAMC,CAAAA,SAAS,CAAC,oCAAD,CAAf,CACH,CAFD,IAEO,IAAIF,WAAW,GAAKC,SAApB,CAA+B,CAClC,KAAMC,CAAAA,SAAS,CAAC,+CAAD,CAAf,CACH,CAED,MAAOH,CAAAA,IAAP,EAAe,WAAf,GAA+BA,IAAI,CAAG,CAAtC,EAIA,GAAIC,WAAW,GAAK,QAApB,CAA8B,CAE1B,MAAOD,IAAI,CAAG,CAAP,CAAWD,GAAG,EAAID,KAAlB,CAA0BC,GAAG,EAAID,KAAxC,CAA+C,CAC3CJ,KAAK,CAACU,IAAN,CAAWN,KAAX,EACAA,KAAK,EAAIE,IAAT,CACH,CAEJ,CAPD,IAOO,IAAIC,WAAW,GAAK,QAApB,CAA8B,CAEjC,GAAIH,KAAK,CAACH,MAAN,GAAiB,CAAjB,EAAsBI,GAAG,CAACJ,MAAJ,GAAe,CAAzC,CAA4C,CACxC,KAAMQ,CAAAA,SAAS,CAAC,gDAAD,CAAf,CACH,CAEDL,KAAK,CAAGA,KAAK,CAACO,UAAN,CAAiB,CAAjB,CAAR,CACAN,GAAG,CAAGA,GAAG,CAACM,UAAJ,CAAe,CAAf,CAAN,CAEA,MAAOL,IAAI,CAAG,CAAP,CAAWD,GAAG,EAAID,KAAlB,CAA0BC,GAAG,EAAID,KAAxC,CAA+C,CAC3CJ,KAAK,CAACU,IAAN,CAAWE,MAAM,CAACC,YAAP,CAAoBT,KAApB,CAAX,EACAA,KAAK,EAAIE,IAAT,CACH,CAEJ,CAdM,IAcA,CACH,KAAMG,CAAAA,SAAS,CAAC,4CAAD,CAAf,CACH,CAED,MAAOT,CAAAA,KAAP,CAEH","sourcesContent":["   \n    export function IsTheWinner(t, ll, ul){\n        var u = range(ll, ul, 1);\n        if (u.length === 0)\n        {\n            return true;            \n        }\n        else\n        {\n            return false;            \n        }\n       };\n       \n    export function CalculateAngleChange(t,a)\n       {\n           return (a + ((9*t)/25)) % 360;\n       };\n\n  export function range(start, end, step) {\n        var range = [];\n        var typeofStart = typeof start;\n        var typeofEnd = typeof end;\n    \n        if (step === 0) {\n            throw TypeError(\"Step cannot be zero.\");\n        }\n    \n        if (typeofStart === \"undefined\" || typeofEnd === \"undefined\") {\n            throw TypeError(\"Must pass start and end arguments.\");\n        } else if (typeofStart !== typeofEnd) {\n            throw TypeError(\"Start and end arguments must be of same type.\");\n        }\n    \n        typeof step == \"undefined\" && (step = 1);\n    \n      \n    \n        if (typeofStart === \"number\") {\n    \n            while (step > 0 ? end >= start : end <= start) {\n                range.push(start);\n                start += step;\n            }\n    \n        } else if (typeofStart === \"string\") {\n    \n            if (start.length !== 1 || end.length !== 1) {\n                throw TypeError(\"Only strings with one character are supported.\");\n            }\n    \n            start = start.charCodeAt(0);\n            end = end.charCodeAt(0);\n    \n            while (step > 0 ? end >= start : end <= start) {\n                range.push(String.fromCharCode(start));\n                start += step;\n            }\n    \n        } else {\n            throw TypeError(\"Only string and number types are supported\");\n        }\n    \n        return range;\n    \n    }"]},"metadata":{},"sourceType":"module"}