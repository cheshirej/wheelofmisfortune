{"ast":null,"code":"export function IsTheWinner(t, ll, ul) {\n  var u = range(ll, ul, 1);\n\n  if (u.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n;\nexport function CalculateAngleChange(t, a) {\n  return (a + 9 * t / 25) % 360;\n}\n;\nexport function range(start, end, step) {\n  var range = [];\n  var typeofStart = typeof start;\n  var typeofEnd = typeof end;\n\n  if (step === 0) {\n    throw TypeError(\"Step cannot be zero.\");\n  }\n\n  if (typeofStart === \"undefined\" || typeofEnd === \"undefined\") {\n    throw TypeError(\"Must pass start and end arguments.\");\n  } else if (typeofStart !== typeofEnd) {\n    throw TypeError(\"Start and end arguments must be of same type.\");\n  }\n\n  typeof step == \"undefined\" && (step = 1);\n\n  if (typeofStart === \"number\") {\n    while (step > 0 ? end >= start : end <= start) {\n      range.push(start);\n      start += step;\n    }\n  } else if (typeofStart === \"string\") {\n    if (start.length !== 1 || end.length !== 1) {\n      throw TypeError(\"Only strings with one character are supported.\");\n    }\n\n    start = start.charCodeAt(0);\n    end = end.charCodeAt(0);\n\n    while (step > 0 ? end >= start : end <= start) {\n      range.push(String.fromCharCode(start));\n      start += step;\n    }\n  } else {\n    throw TypeError(\"Only string and number types are supported\");\n  }\n\n  return range;\n}","map":{"version":3,"sources":["/Users/joriecheshire/Documents/ghwheelofmisfortune/src/modules/CalculationManager.js"],"names":["IsTheWinner","t","ll","ul","u","range","length","CalculateAngleChange","a","start","end","step","typeofStart","typeofEnd","TypeError","push","charCodeAt","String","fromCharCode"],"mappings":"AACI,OAAO,SAASA,WAAT,CAAqBC,CAArB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAA+B;AAClC,MAAIC,CAAC,GAAGC,KAAK,CAACH,EAAD,EAAKC,EAAL,EAAS,CAAT,CAAb;;AACA,MAAIC,CAAC,CAACE,MAAF,KAAa,CAAjB,EACA;AACI,WAAO,IAAP;AACH,GAHD,MAKA;AACI,WAAO,KAAP;AACH;AACD;AAAA;AAEJ,OAAO,SAASC,oBAAT,CAA8BN,CAA9B,EAAgCO,CAAhC,EACJ;AACI,SAAO,CAACA,CAAC,GAAK,IAAEP,CAAH,GAAM,EAAZ,IAAmB,GAA1B;AACH;AAAA;AAEN,OAAO,SAASI,KAAT,CAAeI,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAClC,MAAIN,KAAK,GAAG,EAAZ;AACA,MAAIO,WAAW,GAAG,OAAOH,KAAzB;AACA,MAAII,SAAS,GAAG,OAAOH,GAAvB;;AAEA,MAAIC,IAAI,KAAK,CAAb,EAAgB;AACZ,UAAMG,SAAS,CAAC,sBAAD,CAAf;AACH;;AAED,MAAIF,WAAW,KAAK,WAAhB,IAA+BC,SAAS,KAAK,WAAjD,EAA8D;AAC1D,UAAMC,SAAS,CAAC,oCAAD,CAAf;AACH,GAFD,MAEO,IAAIF,WAAW,KAAKC,SAApB,EAA+B;AAClC,UAAMC,SAAS,CAAC,+CAAD,CAAf;AACH;;AAED,SAAOH,IAAP,IAAe,WAAf,KAA+BA,IAAI,GAAG,CAAtC;;AAIA,MAAIC,WAAW,KAAK,QAApB,EAA8B;AAE1B,WAAOD,IAAI,GAAG,CAAP,GAAWD,GAAG,IAAID,KAAlB,GAA0BC,GAAG,IAAID,KAAxC,EAA+C;AAC3CJ,MAAAA,KAAK,CAACU,IAAN,CAAWN,KAAX;AACAA,MAAAA,KAAK,IAAIE,IAAT;AACH;AAEJ,GAPD,MAOO,IAAIC,WAAW,KAAK,QAApB,EAA8B;AAEjC,QAAIH,KAAK,CAACH,MAAN,KAAiB,CAAjB,IAAsBI,GAAG,CAACJ,MAAJ,KAAe,CAAzC,EAA4C;AACxC,YAAMQ,SAAS,CAAC,gDAAD,CAAf;AACH;;AAEDL,IAAAA,KAAK,GAAGA,KAAK,CAACO,UAAN,CAAiB,CAAjB,CAAR;AACAN,IAAAA,GAAG,GAAGA,GAAG,CAACM,UAAJ,CAAe,CAAf,CAAN;;AAEA,WAAOL,IAAI,GAAG,CAAP,GAAWD,GAAG,IAAID,KAAlB,GAA0BC,GAAG,IAAID,KAAxC,EAA+C;AAC3CJ,MAAAA,KAAK,CAACU,IAAN,CAAWE,MAAM,CAACC,YAAP,CAAoBT,KAApB,CAAX;AACAA,MAAAA,KAAK,IAAIE,IAAT;AACH;AAEJ,GAdM,MAcA;AACH,UAAMG,SAAS,CAAC,4CAAD,CAAf;AACH;;AAED,SAAOT,KAAP;AAEH","sourcesContent":["   \n    export function IsTheWinner(t, ll, ul){\n        var u = range(ll, ul, 1);\n        if (u.length === 0)\n        {\n            return true;            \n        }\n        else\n        {\n            return false;            \n        }\n       };\n       \n    export function CalculateAngleChange(t,a)\n       {\n           return (a + ((9*t)/25)) % 360;\n       };\n\n  export function range(start, end, step) {\n        var range = [];\n        var typeofStart = typeof start;\n        var typeofEnd = typeof end;\n    \n        if (step === 0) {\n            throw TypeError(\"Step cannot be zero.\");\n        }\n    \n        if (typeofStart === \"undefined\" || typeofEnd === \"undefined\") {\n            throw TypeError(\"Must pass start and end arguments.\");\n        } else if (typeofStart !== typeofEnd) {\n            throw TypeError(\"Start and end arguments must be of same type.\");\n        }\n    \n        typeof step == \"undefined\" && (step = 1);\n    \n      \n    \n        if (typeofStart === \"number\") {\n    \n            while (step > 0 ? end >= start : end <= start) {\n                range.push(start);\n                start += step;\n            }\n    \n        } else if (typeofStart === \"string\") {\n    \n            if (start.length !== 1 || end.length !== 1) {\n                throw TypeError(\"Only strings with one character are supported.\");\n            }\n    \n            start = start.charCodeAt(0);\n            end = end.charCodeAt(0);\n    \n            while (step > 0 ? end >= start : end <= start) {\n                range.push(String.fromCharCode(start));\n                start += step;\n            }\n    \n        } else {\n            throw TypeError(\"Only string and number types are supported\");\n        }\n    \n        return range;\n    \n    }"]},"metadata":{},"sourceType":"module"}