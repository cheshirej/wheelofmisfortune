{"version":3,"sources":["reducers/standupReducer.js","reducers/timerReducer.js","reducers/teamMemberListReducer.js","reducers/circleReducer.js","modules/CalculationManager.js","reducers/teamMemberLocationReducer.js","reducers/winnerReducer.js","reducers/index.js","actions/index.js","components/angle.component.js","App.js","actions/actionMapping.js","customMiddleware/index.js","index.js"],"names":["standupReducer","state","action","type","timerReducer","parseInt","value","tmListReducer","circleReducer","IsTheWinner","t","ll","ul","start","end","step","range","typeofStart","typeofEnd","TypeError","push","length","charCodeAt","String","fromCharCode","CalculateAngleChange","a","tmLocationReducer","z","console","log","forEach","aa","i","indexOf","n","e","time","teamMemberLocations","CalcFunctions","winnerReducer","winner","tm","firstName","lastName","rootReducer","combineReducers","whosOnFirst","teamMembers","circle","isSaved","changeTeamMember","resetStandup","initializeLocationArray","updateLocationArray","Angle","className","this","props","React","Component","App","startRotation","Math","floor","random","updateTimer","changeCircle","setTimeout","updateLocation","calculateWinner","saveStandup","changeTMList","initializeLocation","tms","Array","from","map","key","onClick","connect","dispatch","axios","get","then","res","data","Actions","catch","err","newTime","AsyncFuncs","updateTM","c","post","status","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f730a028.chunk.js","sourcesContent":["const standupReducer = (state = false, action) => {\n    switch (action.type) {\n      case \"SAVE\":\n        return true;\n      case \"RESET\":\n        return false;\n      default:\n        return state;\n    }\n  };\n\n  export default standupReducer;","const timerReducer = (state = 0, action) => {\n    switch (action.type) {\n      case \"CHANGETIMEDELTA\":\n        return parseInt(action.value)\n      default:\n        return state;\n    }\n  };\n  export default timerReducer;","const tmListReducer = (state = [], action) => {\n    switch (action.type) {\n      case \"CHANGETMLIST\":\n        return action.value;\n      default:\n        return state;\n    }\n  };\n\n  export default tmListReducer;","const circleReducer = (state = \"circle\", action) => {\n    switch (action.type) {\n      case \"CHANGECIRCLE\":\n        return action.value;\n      default:\n        return state;\n    }\n  };\n\n  export default circleReducer;","   \n    export function IsTheWinner(t, ll, ul){\n        var u = range(ll, ul, 1);\n        if (u.length === 0)\n        {\n            return true;            \n        }\n        else\n        {\n            return false;            \n        }\n       };\n       \n    export function CalculateAngleChange(t,a)\n       {\n           return (a + ((9*t)/25)) % 360;\n       };\n\n  export function range(start, end, step) {\n        var range = [];\n        var typeofStart = typeof start;\n        var typeofEnd = typeof end;\n    \n        if (step === 0) {\n            throw TypeError(\"Step cannot be zero.\");\n        }\n    \n        if (typeofStart === \"undefined\" || typeofEnd === \"undefined\") {\n            throw TypeError(\"Must pass start and end arguments.\");\n        } else if (typeofStart !== typeofEnd) {\n            throw TypeError(\"Start and end arguments must be of same type.\");\n        }\n    \n        typeof step == \"undefined\" && (step = 1);\n    \n      \n    \n        if (typeofStart === \"number\") {\n    \n            while (step > 0 ? end >= start : end <= start) {\n                range.push(start);\n                start += step;\n            }\n    \n        } else if (typeofStart === \"string\") {\n    \n            if (start.length !== 1 || end.length !== 1) {\n                throw TypeError(\"Only strings with one character are supported.\");\n            }\n    \n            start = start.charCodeAt(0);\n            end = end.charCodeAt(0);\n    \n            while (step > 0 ? end >= start : end <= start) {\n                range.push(String.fromCharCode(start));\n                start += step;\n            }\n    \n        } else {\n            throw TypeError(\"Only string and number types are supported\");\n        }\n    \n        return range;\n    \n    }","import * as CalcFunctions from '../modules/CalculationManager';\n\nconst tmLocationReducer = (state = [], action) => {\n    switch (action.type) {\n      case \"INITIALIZE\":\n        {\n          var z = [];\n          console.log(action.value);\n          action.value.forEach((aa) => {\n            console.log(aa);\n            var i = action.value.indexOf(aa);\n            var n = i+1;\n            var e = [];\n            e[0] = aa;\n            e[1] = (n-1)*60;\n            e[2] = (n*60)-1;\n            z[i] = e;\n          });\n          return z;           \n        }\n\n      case \"UPDATE\" : \n      {\n        console.log(action.value.time);\n        console.log(action.value.teamMemberLocations);\n        // var tmArray = Array.from(action.value.teamMemberLocations);\n        action.value.teamMemberLocations.forEach((aa) => {\n            console.log(aa[1]);\n            console.log(aa[2]);\n            aa[1] = CalcFunctions.CalculateAngleChange(action.value.time, aa[1]);\n            aa[2] = CalcFunctions.CalculateAngleChange(action.value.time, aa[2]);\n        });\n        return action.value.teamMemberLocations;        \n      }\n\n      default:\n        return state;\n    }\n  };\n\n  export default tmLocationReducer;\n\n// const tmLocationReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case \"INITIALIZE\":\n//         return {teamMemberLocations: action.value};\n//     case \"UPDATE\":\n//         return action.value;\n//     default:\n//       return state;\n//   }\n// };\n\n// export default tmLocationReducer;\n\n","import * as CalcFunctions from '../modules/CalculationManager';\n\nconst winnerReducer = (state = '', action) => {\n    switch (action.type) {\n      case \"CALCULATE\":\n        {\n            var winner = '';\n            action.value.teamMemberLocations.forEach((tm) => {\n                var isWinner = CalcFunctions.IsTheWinner(action.value.time, tm[1], tm[2]);\n                if (isWinner)\n                    winner = {firstName: tm[0].firstName, lastName: tm[0].lastName}\n            });\n            return winner;\n        }\n      default:\n        return state;\n    }\n  };\n\n  export default winnerReducer;","import {combineReducers} from 'redux';\nimport tmReducer from './standupReducer';\nimport timerReducer from './timerReducer';\nimport tmListReducer from './teamMemberListReducer';\nimport circleReducer from './circleReducer';\nimport tmLocationReducer from './teamMemberLocationReducer';\nimport winnerReducer from './winnerReducer';\nimport standupReducer from './standupReducer';\n\nconst rootReducer = combineReducers({\n    whosOnFirst: winnerReducer,\n    time: timerReducer,\n    teamMembers : tmListReducer,\n    circle: circleReducer,\n    teamMemberLocations: tmLocationReducer,\n    isSaved: standupReducer\n});\n\nexport default rootReducer;","export const changeTMList = (value) => {\n    return {\n        type: \"CHANGETMLIST\",\n        value: value\n    }\n};\n\nexport const changeTeamMember = (value) => {\n    return {\n        type: \"CHANGETM\",\n        value: value\n    }\n};\n\nexport const calculateWinner = (value) => {\n    return {\n        type: \"CALCULATE\",\n        value: value\n    }\n};\n\n\nexport const saveStandup = (value) => {\n    return {\n        type: \"SAVE\",\n        value: value\n    }\n};\n\nexport const resetStandup = (value) => {\n    return {\n        type: \"RESET\",\n        value: value\n    }\n};\n\n\nexport const changeTimeDelta = (value) => {\n    return {\n        type: \"CHANGETIMEDELTA\",\n        value: value\n    }\n};\n\n\nexport const changeCircle = (value) => {\n    return {\n        type: \"CHANGECIRCLE\",\n        value: value\n    }\n};\n\nexport const initializeLocationArray = (value) => {\n    return {\n        type: \"INITIALIZE\",\n        value: value\n    }\n};\n\n\nexport const updateLocationArray = (value) => {\n    return {\n        type: \"UPDATE\",\n        value: value\n    }\n};","import React from 'react';\nimport '../App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n   \n// IsTheWinner(t, ll, ul) {\n//     var lowerLimitChange = CalculateAngleChange(t, ll);\n//     var upperLimitChange = CalculateAngleChange(t, ul);\n   \n//     if (lowerLimitChange <= 360 || lowerLimitChange >= 330)\n//     {\n//        //return true;\n//        this.setState({\n//            IsTheWinner: true\n//        });\n//     }\n//     else if (upperLimitChange >= 0 && upperLimitChange <= 30)\n//     {\n//        this.setState({\n//            IsTheWinner: true\n//        });\n//     }\n//     else\n//     {\n//        this.setState({\n//            IsTheWinner: false\n//        })\n//     }\n//    };\n   \n//     CalculateAngleChange(t,a)\n//    {\n//        return (a + ((9*t)/25)) % 360;\n//    }\n\nexport default class Angle extends React.Component{\n    // state = {\n    //     lowerLimit: this.props.lowerLimit,\n    //     upperLimit: this.props.upperLimit,\n    //     time: this.props.time,\n    //     isOnFirst: false\n    // }     \n\n\n    render(){\n        return (\n            <li>\n            <div className=\"text\">{this.props.firstName}</div>\n            </li>\n        );\n    }\n}","import React from 'react';\nimport Angle from './components/angle.component'\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.changeTMList();\n    this.props.initializeLocation(this.props.teamMembers);\n  }\n\n\n\n  startRotation = () => {\n    this.props.resetStandup(false);\n    const time = Math.floor(Math.random() * 10000) + 1;\n    this.props.updateTimer(time);\n    this.props.changeCircle(\"circle start-rotate\");\n    setTimeout(() => {\n      this.props.updateLocation(this.props);\n      this.props.changeCircle(\"circle start-rotate stop-rotate\");\n      this.props.calculateWinner(this.props);\n      this.props.saveStandup(this.props.whosOnFirst);\n    },time);\n  };\n\n\n    render(){\n      console.log(this.props);\n      const tms = Array.from(this.props.teamMembers).map((props) => \n      <Angle key={props.firstName} firstName={props.firstName}/>\n    );\n\n      return (\n        <div>\n        <div>\n        <div className=\"arrow\"></div>\n        <ul className={this.props.circle}>\n          {tms}\n        </ul>\n        <button className=\"spin-button\" onClick={this.startRotation}>SPIN</button>\n      </div>\n      <div className=\"winner\">\n      <h3>The winner is... {(this.props.isSaved) ? this.props.whosOnFirst.firstName + \"!!!\": \"\"}</h3>\n      </div>\n      <div>\n      <h4>{(this.props.isSaved) ? \"Saved to Database!\" : \"\"}</h4>\n      </div>\n      </div>\n      );\n\n    }\n}\nexport default App;\n","import {connect} from 'react-redux';\nimport * as Actions from '../actions';\nimport App from '../App';\nimport * as AsyncFuncs from '../customMiddleware'\n\nconst mapStateToProps = state => ({\n    whosOnFirst: state.whosOnFirst,\n    time : state.time,\n    teamMembers: state.teamMembers,\n    circle: state.circle,\n    teamMemberLocations: state.teamMemberLocations,\n    isSaved: state.isSaved\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    changeTMList: () => dispatch(AsyncFuncs.FetchTMs()),\n    updateTimer: (newTime) => dispatch(AsyncFuncs.UpdateTime(newTime)),\n    updateTM: () => dispatch(Actions.changeTeamMember),\n    changeCircle: (c) => dispatch(AsyncFuncs.UpdateCircle(c)),\n    initializeLocation: (c) => dispatch(Actions.initializeLocationArray(c)),\n    updateLocation: (c) => dispatch(Actions.updateLocationArray(c)),\n    calculateWinner: (c) => dispatch(Actions.calculateWinner(c)),\n    resetStandup: (c) => dispatch(Actions.resetStandup(c)),\n    saveStandup: (c) => dispatch(AsyncFuncs.UpdateStandup(c))\n\n\n  });\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(App);","import axios from 'axios';\nimport * as Actions from '../actions';\n\n\n\nexport const FetchTMs = () => {\n    return dispatch => {\n  \n      axios\n      .get(\"http://localhost:5000/teamMembers\")\n        .then(res => {\n          dispatch(Actions.changeTMList(res.data));\n          dispatch(Actions.initializeLocationArray(res.data));\n        })\n        .catch(err => {\n          console.log(\"ERROR: \" + err);\n        });\n    };\n  };\n\n  export const UpdateTime = (newTime) => {\n    return dispatch => {\n        dispatch(Actions.changeTimeDelta(newTime))\n    };\n  };\n\n\n  export const UpdateCircle = (c) => {\n    return dispatch => {\n        dispatch(Actions.changeCircle(c))\n    };\n  };\n\n  export const UpdateTMLocations = (c) => {\n    return dispatch => {\n        dispatch(Actions.updateLocationArray(c))\n    };\n  };\n\n  export const initializeLocationArray = (c) => {\n    return dispatch => {\n        dispatch(Actions.initializeLocationArray(c))\n    };\n  };\n\n  export const UpdateStandup = (c) => {\n    return dispatch => {\n        axios\n        .post(\"http://localhost:5000/dailyStandups/add\", {firstName: c.firstName, lastName: c.lastName})\n          .then(res => {\n              if (res.status === 200)\n              {\n                dispatch(Actions.saveStandup(true));                  \n              }\n              else\n              {\n                  dispatch(Actions.resetStandup(false));\n              }\n          })\n          .catch(err => {\n            console.log(\"ERROR: \" + err);\n          });\n    };\n  };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './reducers';\nimport {Provider} from 'react-redux';\nimport ActionMapping from './actions/actionMapping';\nimport thunk from 'redux-thunk';\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ActionMapping />      \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}